{"version":3,"file":"static/css/871.42c64169.chunk.css","mappings":"AAAA,gBAGE,gBADA,kBADA,UAEA,CCCF,aACE,iBACA,YCsEE,2BDxEJ,aAKI,UAEA,oBAEE,gBADA,UACA,EAKF,wCACE,6BAEA,8CAEE,iCADA,eACA,CEvBR,YAQE,mBAFA,aAHA,YAEA,YAEA,uBAGA,qBARA,gBADA,kBAGA,UAMA,CAEE,qCAMI,SAFA,YAGA,OALA,kBAMA,OAAM,CAHN,MAFA,UAKA,CAGJ,gBACI,iBACA,uBAGJ,qBACI,4CAGJ,oBACI,UACA,wBAGJ,oBACI,UClCR,cACE,aACA,mBAEA,eACA,uBAFA,SAEA,CAEA,wBAEE,iCADA,4CAIA,eAIA,aALA,iBAGA,mBADA,kBAHA,YAOA,kBAFA,WAEA,CAEA,+BACE,gBAGF,6BAIE,mBAFA,aACA,sBAGA,qBALA,UAKA,CAEF,mCACE,eFwCF,2BExEJ,cAoCI,6BACA,wBAEE,mBADA,cACA,EC3CN,UACE,gGACA,2CAEA,kCACE,aACA,eACA,cAHF,0BACE,aACA,eACA,cCNF,aACE,WACA,CAEF,yBAFE,2CAMA,CAJF,YAEE,YACA,kBAFA,UAGA,CCJF,gBACE,eACA,gBACA,aACA,kBAEA,qBACE,gBAGJ,0BAGE,mBAIA,uCADA,wCAEA,wBAPA,aAGA,sBACA,cAKA,gBACA,iBAFA,SAEA,CLkDA,2BK9CF,WACE","sources":["components/NotFound/NotFound.scss","components/SearchForm/SearchForm.scss","../node_modules/bootstrap/scss/mixins/_breakpoints.scss","components/LazyImage/LazyImage.scss","components/Forecast/Forecast.scss","components/Skeleton/Skeleton.scss","components/ForeCastLoader/ForeCastLoader.scss","components/App/App.scss"],"sourcesContent":[".not-found-text {\n  width: 100%;\n  text-align: center;\n  margin-top: 16px;\n}","@import \"~bootstrap/scss/functions\";\n@import \"~bootstrap/scss/variables\";\n@import \"~bootstrap/scss/mixins\";\n\n.search-form {\n  margin: 32px auto;\n  width: 400px;\n\n  @include media-breakpoint-down(sm) {\n    width: 90%;\n\n    & button {\n      width: 100%;\n      margin-top: 10px;\n    }\n  }\n  .input-group {\n\n    & .form-control {\n      border-color: var(--bg-color);\n  \n      &:focus {\n        box-shadow: none;\n        border-color: var(--second-color);\n      }\n    }\n  }\n}\n\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @if not $n {\n    @error \"breakpoint `#{$name}` not found in `#{$breakpoints}`\";\n  }\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $max: map-get($breakpoints, $name);\n  @return if($max and $max > 0, $max - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min:  breakpoint-min($name, $breakpoints);\n  $next: breakpoint-next($name, $breakpoints);\n  $max:  breakpoint-max($next);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($next, $breakpoints) {\n      @content;\n    }\n  }\n}\n",".lazy-image {\n  position: relative;\n  overflow: hidden;\n  height: 100%;\n  width: 50px;\n  height: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: auto;\n  margin-bottom: 8px;\n\n    & img,\n    .no-lqip {\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n    }\n\n    & img {\n        object-fit: cover;\n        object-position: center;\n    }\n\n    & .no-lqip {\n        border-radius: var(--forecast-border-radius);\n    }\n\n    & .source {\n        opacity: 0;\n        transition: opacity 1200ms;\n    }\n\n    & .loaded {\n        opacity: 1;\n    }\n}","@import \"~bootstrap/scss/functions\";\n@import \"~bootstrap/scss/variables\";\n@import \"~bootstrap/scss/mixins\";\n\n.forecast-box {\n  display: flex;\n  flex-direction: row;\n  width: 84%;\n  flex-wrap: wrap;\n  justify-content: center;\n\n  .forecast {\n    border-radius: var(--forecast-border-radius);\n    background-color: var(--bg-color);\n    padding: 8px;\n    line-height: 24px;\n    cursor: pointer;\n    margin-right: 24px;\n    margin-bottom: 24px;\n    width: 130px;\n    height: 150px;\n    text-align: center;\n\n    .title {\n      font-weight: 600;\n    }\n  \n    .img {\n      width: 50px;\n      display: flex;\n      flex-direction: center;\n      align-items: center;\n      margin: auto;\n      margin-bottom: 8px;\n    }\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n  @include media-breakpoint-down(sm) {\n    justify-content: space-around;\n    .forecast {\n      margin-right: 0px;\n      margin-bottom: 12px;\n    }\n  }\n}",".skeleton {\n  animation: pulseAnimation 1.6s ease infinite;\n  background-color: var(--bg-color--skeleton);\n\n  @keyframes pulseAnimation {\n    0% { opacity: 1;}\n    45% { opacity: .3;}\n    100% {opacity: 1;}\n  }\n}",".loader { \n  .img {\n    height: 50px;\n    border-radius: var(--forecast-border-radius);\n  }\n  div {\n    width: 100%;\n    height: 16px;\n    margin-bottom: 8px;\n    border-radius: var(--forecast-border-radius);\n  }\n}","@import \"~bootstrap/scss/functions\";\n@import \"~bootstrap/scss/variables\";\n@import \"~bootstrap/scss/mixins\";\n\n.weather-app {  \n  h1 {\n    font-size: 3rem;\n    font-weight: 900;\n    padding: 16px;\n    text-align: center;\n\n    span {\n      font-weight: 100;\n    }\n  }\n  .weather-box {\n    display: flex;\n    // justify-content: space-around;\n    align-items: center;\n    flex-direction: column;\n    margin: 0 auto;\n    border-radius: var(--main-border-radius);\n    background-color: var(--bg-color--card);\n    color: var(--text-color);\n    width: 94%;\n    max-width: 900px;\n    min-height: 300px;\n  }\n}\n@include media-breakpoint-down(md) {\n  .container {\n    width: 100% !important;\n  }\n}"],"names":[],"sourceRoot":""}